# NOTE: update this with your service name
service: serverless-notes-api

# Create an optimized package for our functions 
package:
  individually: true

plugins:
  - serverless-bundle # Package our functions with Webpack
  - serverless-offline
  - serverless-dotenv-plugin # Load .env as environment variables

provider:
  name: aws
  runtime: nodejs10.x
  stage: dev
  region: us-east-2
  

  # Provide enviorment variables to our handlers 
  environment:
    tableName: notes


  # Configure the permissions for an IAM roles, for the Lambda function
  # In this case Lambda functions are granted with permissions to access DynamoDB.
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:DescribeTable
        - dynamodb:Query
        - dynamodb:Scan 
        - dynamodb:GetItem

        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource: "arn:aws-dynamodb:us-east-2:*:*"


# Define HTTP API endpoints than invoke main functions
functions:
  # Create Note Endpoint
  # Path: url is /notes
  # Method: Post request
  # Cors: Enable CORS for browser cross domain api call
  # Authorizer: Authenticate using the aws iam role 
  create:
    handler: create.main
    events: 
      - http:
          path:notes
          method:post
          cors:true
          authorizer:aws_iam

